{"swagger": "2.0", "info": {"x-logo": {"altText": "Quran Journey", "url": "./assets/img/qjLogo.png"}, "title": "Quran Journey API"}, "host": "localhost", "basePath": "/api", "schemes": ["http"], "paths": {"/chapter/{sura_number}": {"get": {"summary": "Get Chapter Verses", "description": "Fetches the verses of a chapter", "tags": ["Quran Endpoints"], "produces": ["application/json"], "parameters": [{"in": "query", "name": "sura_number", "type": "integer", "required": true, "example": 1}], "responses": {"200": {"description": "A list of the verses in a chapter.", "schema": {"type": "array", "items": {"$ref": "#/definitions/Verse"}}}, "404": {"description": "No chapter with that ID found."}}}}, "/chapters": {"get": {"summary": "Get Chapters", "description": "Fetch an ordered list of all of the english names of the chapters in the Quran.", "tags": ["Quran Endpoints"], "produces": ["application/json"], "responses": {"200": {"description": "An ordered list of chapters with their names and sura_numbers.", "schema": {"type": "array", "items": {"$ref": "#/definitions/Chapter"}}}}}}, "/lesson": {"post": {"summary": "Create a lesson", "tags": ["Lesson Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "schema": {"type": "object", "required": ["lesson_date", "source"], "properties": {"lesson_date": {"type": "date", "description": "to identify the day that the lesson was taught", "example": "2021-10-30T00:00:00.000Z"}, "source": {"type": "string", "description": "a URL to the lesson recording", "example": "https://www.facebook.com/watch/live/?ref=watch_permalink&v=244235014324418"}}}}], "responses": {"200": {"description": "Lesson has been created.", "schema": {"$ref": "#/definitions/Lesson"}}}}, "patch": {"summary": "Update a lesson", "tags": ["Lesson Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "name": "lesson", "description": "the lesson to update and it's new attributes", "schema": {"$ref": "#/definitions/Lesson"}}], "responses": {"200": {"description": "Lesson has been updated.", "schema": {"$ref": "#/definitions/Lesson"}}, "404": {"description": "Could not find a lesson with that id."}}}, "delete": {"summary": "Delete a lesson", "tags": ["Lesson Endpoints"], "produces": ["application/json"], "parameters": [{"in": "path", "name": "id", "description": "the lesson to be deleted", "type": "integer", "required": true, "example": 1}], "responses": {"200": {"description": "The Lesson has been deleted.", "schema": {"$ref": "#/definitions/Lesson"}}, "404": {"description": "Could not find a lesson with that id."}}}}, "/lesson/{lesson_id}": {"get": {"summary": "Fetch a lesson by ID", "description": "This is a general fetch and has no parameters. It will fetch all of the lessons in the database.", "tags": ["Lesson Endpoints"], "produces": ["application/json"], "parameters": [{"in": "path", "name": "lesson_id", "type": "integer", "required": true, "example": 1}], "responses": {"200": {"description": "The corresponding lesson.", "schema": {"$ref": "#/definitions/Lesson"}}, "404": {"description": "No lessons found with that ID."}}}}, "/lessons": {"get": {"summary": "Filter lessons", "description": "This fetch acts as a filter based on the given query params. If none are given, then all params are fetched. Operator must be one of: eq, gt, lt, gte, or lte.", "tags": ["Lesson Endpoints"], "produces": ["application/json"], "parameters": [{"in": "query", "name": "property", "type": "string", "required": false, "example": "lesson_date"}, {"in": "query", "name": "operator", "type": "string", "required": false, "example": "eq"}, {"in": "query", "name": "value", "type": "string", "required": false, "example": "2021-5-28"}], "responses": {"200": {"description": "A list of lessons.", "schema": {"type": "array", "items": {"$ref": "#/definitions/Lesson"}}}, "404": {"description": "No lessons found."}}}}, "/meaning": {"get": {"summary": "Fetch meaning", "description": "This fetches a root word's meaning", "tags": ["Linguistic Endpoints"], "produces": ["application/json"], "parameters": [{"in": "path", "name": "meaning_id", "description": "the id of the meaning to be updated", "type": "integer", "required": true, "example": 1}], "responses": {"200": {"description": "root meaning has been fetched.", "schema": {"$ref": "#/definitions/RootMeaning"}}, "404": {"description": "No root meaning with that ID found."}}}, "post": {"summary": "Add a meaning to a rootword", "description": "This endpoint adds a meaning to a root word", "tags": ["Linguistic Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "schema": {"type": "object", "required": ["root_id", "meaning"], "properties": {"root_id": {"type": "integer", "description": "the id of the root word", "example": 936}, "meaning": {"type": "string", "description": "The meaning.", "example": "A name"}}}}], "responses": {"200": {"description": "rootWord has been created.", "schema": {"$ref": "#/definitions/RootMeaning"}}}}, "put": {"summary": "Edit meaning", "description": "This edits a root word's meaning", "tags": ["Linguistic Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "schema": {"$ref": "#/definitions/RootMeaning"}}], "responses": {"200": {"description": "root meaning has been updated.", "schema": {"$ref": "#/definitions/RootMeaning"}}, "404": {"description": "No root meaning with that ID found."}}}, "delete": {"summary": "Delete meaning", "description": "Deletes a root word's meaning", "tags": ["Linguistic Endpoints"], "produces": ["application/json"], "parameters": [{"in": "path", "name": "meaning_id", "description": "the id of the meaning to be deleted", "type": "integer", "required": true, "example": 1}], "responses": {"200": {"description": "meaning has been deleted.", "schema": {"$ref": "#/definitions/RootMeaning"}}, "404": {"description": "No verse with that ID found."}}}}, "/meanings/{verse_id}": {"get": {"summary": "Get the meanings of each word in a verse", "description": "Fetches the words, their roots, and their meanings for a specific verse.", "tags": ["Linguistic Endpoints"], "produces": ["application/json"], "parameters": [{"in": "query", "name": "verse_id", "type": "integer", "required": true, "example": 1}], "responses": {"200": {"description": "A list of the root words and their meanings pertaining to each word in a verse.", "schema": {"type": "array", "items": {"$ref": "#/definitions/VerseWordMeaning"}}}, "404": {"description": "No verse with that ID found."}}}}, "/mufasir": {"get": {"summary": "Get Mufasireen", "description": "Fetch an ordered list of all of the names of mufasireen.", "tags": ["Tafsir Endpoints"], "produces": ["application/json"], "responses": {"200": {"description": "An ordered list of mufasireen with their information.", "schema": {"type": "array", "items": {"$ref": "#/definitions/Mufasir"}}}}}, "post": {"summary": "Add Mufasir", "description": "Add a mufasir.", "tags": ["Tafsir Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "schema": {"type": "object", "required": ["mufasir_name", "death"], "properties": {"mufasir_name": {"type": "string", "description": "The name of the mufasir", "example": "Ibn Kathir"}, "death": {"type": "string", "description": "The date that the mufasir passed away", "example": "1203 H"}}}}], "responses": {"200": {"description": "Successfully added mufasir.", "schema": {"$ref": "#/definitions/Mufasir"}}, "404": {"description": "A mufasir with that ID does not exist."}}}, "put": {"summary": "Update Mufasir", "description": "Update a mufasir.", "tags": ["Tafsir Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "schema": {"$ref": "#/definitions/Mufasir"}}], "responses": {"200": {"description": "Successfully updated mufasir.", "schema": {"$ref": "#/definitions/Mufasir"}}, "404": {"description": "A mufasir with that ID does not exist."}}}, "delete": {"summary": "Remove Mufasir", "description": "Remove a mufasir.", "tags": ["Tafsir Endpoints"], "produces": ["application/json"], "parameters": [{"in": "path", "name": "mufasir_id", "type": "integer", "required": true, "example": 1}], "responses": {"200": {"description": "Successfully deleted mufasir.", "schema": {"$ref": "#/definitions/Reflection"}}, "404": {"description": "A mufasir with that ID does not exist."}}}}, "/mufasir/{mufasir_id}": {"get": {"summary": "Get a Mufasir", "description": "Fetch a mufasir by ID.", "tags": ["Tafsir Endpoints"], "produces": ["application/json"], "parameters": [{"in": "path", "name": "mufasir_id", "type": "integer", "required": true, "example": 1}], "responses": {"200": {"description": "The mufasir's information.", "schema": {"type": "array", "items": {"$ref": "#/definitions/Mufasir"}}}}}}, "/reflection": {"get": {"summary": "Get all reflections", "description": "This is used to request all reflections stored in the Reflection Table", "tags": ["Reflection Endpoints"], "produces": ["application/json"], "responses": {"200": {"description": "All reflections have been fetched.", "schema": {"$ref": "#/definitions/Reflection"}}, "404": {"description": "Could not find any reflections."}}}, "post": {"summary": "Create a reflection", "description": "This creates a reflection from the data attribute in the request body", "tags": ["Reflection Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "schema": {"type": "object", "required": ["verse_id", "title", "reflection"], "properties": {"verse_id": {"type": "integer", "description": "to identify the verse that the reflection is refering to", "example": 23}, "title": {"type": "string", "description": "a title to the refelction", "example": "My Reflection"}, "reflection": {"type": "string", "description": "refelction on verse", "example": "I have..."}}}}], "responses": {"200": {"description": "Reflection has been created.", "schema": {"$ref": "#/definitions/Reflection"}}}}, "patch": {"summary": "Update a reflection", "tags": ["Reflection Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "schema": {"$ref": "#/definitions/Reflection"}}], "responses": {"200": {"description": "Reflection has been updated.", "schema": {"$ref": "#/definitions/Reflection"}}, "404": {"description": "Could not find a reflection with that id."}}}, "delete": {"summary": "Delete a reflection", "tags": ["Reflection Endpoints"], "produces": ["application/json"], "parameters": [{"in": "path", "name": "reflection_id", "description": "the id of the reflection to be deleted", "type": "integer"}], "responses": {"200": {"description": "The reflection has been deleted.", "schema": {"$ref": "#/definitions/Reflection"}}, "404": {"description": "Could not find a reflection with that id."}}}}, "/reflection/{reflection_id}": {"get": {"summary": "Fetch a Reflection by ID", "description": "Fetch a reflection by it's ID.", "tags": ["Reflection Endpoints"], "produces": ["application/json"], "parameters": [{"in": "path", "name": "reflection_id", "type": "integer", "required": true, "example": 1}], "responses": {"200": {"description": "The corresponding reflection.", "schema": {"$ref": "#/definitions/Reflection"}}, "404": {"description": "No reflections found with that ID."}}}}, "/reflection/{surah_id}/{verse_id}": {"get": {"summary": "Fetch a Reflection by the surah and verse ID", "description": "Fetch a reflection by it's surah id and verse ID.", "tags": ["Reflection Endpoints"], "produces": ["application/json"], "parameters": [{"in": "path", "name": "surah_id", "type": "integer", "required": true, "example": 12}, {"in": "path", "name": "verse_id", "type": "integer", "required": true, "example": 134}], "responses": {"200": {"description": "The corresponding reflection.", "schema": {"$ref": "#/definitions/Reflection"}}, "404": {"description": "No reflections found with those IDs."}}}}, "/rootWord": {"get": {"summary": "Get all rootWords", "tags": ["Linguistic Endpoints"], "produces": ["application/json"], "responses": {"200": {"description": "All rootWords have been fetched.", "schema": {"$ref": "#/definitions/RootWord"}}, "404": {"description": "Could not find any rootWords."}}}, "post": {"summary": "Create a rootWord", "description": "This creates a rootWord from the data attribute in the request body", "tags": ["Linguistic Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "name": "id", "description": "the rootWord to update and it's new attributes", "schema": {"type": "object", "required": ["root_word"], "properties": {"root_word": {"type": "string", "description": "the root word (spaces between letters)", "example": "\u0633 \u0645 \u0648"}}}}], "responses": {"200": {"description": "rootWord has been created.", "schema": {"$ref": "#/definitions/RootWord"}}}}, "patch": {"summary": "Update a rootWord", "tags": ["Linguistic Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "name": "id", "description": "the rootWord to update and it's new attributes", "schema": {"$ref": "#/definitions/RootWord"}}], "responses": {"200": {"description": "rootWord has been updated.", "schema": {"$ref": "#/definitions/RootWord"}}, "404": {"description": "Could not find a rootWord with that id."}}}, "delete": {"summary": "Delete a rootWord", "tags": ["Linguistic Endpoints"], "produces": ["application/json"], "parameters": [{"in": "path", "name": "root_id", "type": "integer", "example": 1, "description": "the id of the rootWord to be deleted"}], "responses": {"200": {"description": "The rootWord has been deleted.", "schema": {"$ref": "#/definitions/RootWord"}}, "404": {"description": "Could not find a rootWord with that id."}}}}, "/rootWord/{rootWord_id}": {"get": {"summary": "Fetch a rootWord by ID", "description": "Fetch a root word by it's ID.", "tags": ["Linguistic Endpoints"], "produces": ["application/json"], "parameters": [{"in": "path", "name": "root_id", "type": "integer", "required": true, "example": 1}], "responses": {"200": {"description": "The corresponding rootWord.", "schema": {"$ref": "#/definitions/RootWord"}}, "404": {"description": "No rootWords found with that ID."}}}}, "/surah/info": {"get": {"summary": "Fetch information about a surah", "description": "Fetch information about a surah based on either the surah info id or the surah id. The request must contains one of these two query parameters.", "tags": ["SurahInfo Endpoints"], "produces": ["application/json"], "parameters": [{"in": "query", "name": "surah", "type": "integer", "example": 1}, {"in": "query", "name": "surah_info_id", "type": "integer", "example": 1}], "responses": {"200": {"description": "The corresponding surah-info.", "schema": {"$ref": "#/definitions/SurahInfo"}}, "404": {"description": "No surah info found with that ID."}}}, "post": {"summary": "Add information about a surah", "tags": ["SurahInfo Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "name": "id", "description": "the surah info to update and it's new attributes", "schema": {"type": "object", "required": ["surah", "title", "info"], "properties": {"surah": {"type": "integer", "description": "to identify the surah that the surah info is refering to", "example": 23}, "title": {"type": "string", "description": "a title to the surah info section", "example": "Place of revelation"}, "info": {"type": "string", "description": "information regarding the surah", "example": "This surah was revealed in place x"}}}}], "responses": {"200": {"description": "Surah Info has been created.", "schema": {"$ref": "#/definitions/SurahInfo"}}}}, "patch": {"summary": "Update specific information about a surah", "tags": ["SurahInfo Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "schema": {"$ref": "#/definitions/SurahInfo"}}], "responses": {"200": {"description": "Surah Info has been updated.", "schema": {"$ref": "#/definitions/SurahInfo"}}, "404": {"description": "Could not find a surah info with that id."}}}}, "/surah/info/{surah_info_id}": {"delete": {"summary": "Delete some information aobut a surah", "tags": ["SurahInfo Endpoints"], "produces": ["application/json"], "parameters": [{"in": "path", "name": "surah_info_id", "description": "the surah info to be deleted", "schema": {"$ref": "#/definitions/SurahInfo"}}], "responses": {"200": {"description": "The Surah Info has been deleted.", "schema": {"$ref": "#/definitions/SurahInfo"}}, "404": {"description": "Could not find a surah info with that id."}}}}}, "definitions": {"ArabicWord": {"type": "object", "required": ["word_id", "root_id", "word"], "properties": {"word_id": {"type": "integer", "description": "the id of the arabic word", "example": 1}, "root_id": {"type": "integer", "description": "the id of the root word associated with the arabic word", "example": 936}, "word": {"type": "string", "description": "string representaiton of the word.", "example": "\u0628\u0650\u0633\u0652\u0645\u0650"}}}, "Chapter": {"type": "object", "required": ["sura_number", "sura_name"], "properties": {"sura_number": {"type": "integer", "description": "the number of the surah (acting as the surah id)", "example": 1}, "sura_name": {"type": "string", "description": "the name of the surah", "example": "al-F\u0101tihah"}}}, "Lesson": {"type": "object", "required": ["lesson_id", "lesson_date", "source"], "properties": {"lesson_id": {"type": "integer", "description": "to identify the lesson from others", "example": 1}, "lesson_date": {"type": "date", "description": "to identify the day that the lesson was taught", "example": "2021-10-30T00:00:00.000Z"}, "source": {"type": "string", "description": "a URL to the lesson recording", "example": "https://www.facebook.com/watch/live/?ref=watch_permalink&v=244235014324418"}}}, "Mufasir": {"type": "object", "required": ["mufasir_id", "mufasir_name", "death"], "properties": {"mufasir_id": {"type": "Integer", "description": "the id of the mufasir", "example": 1}, "mufasir_name": {"type": "string", "description": "The name of the mufasir", "example": "Ibn Kathir"}, "death": {"type": "string", "description": "The date that the mufasir passed away", "example": "1203 H"}}}, "Reflection": {"type": "object", "required": ["reflection_id", "verse_id", "title", "reflection"], "properties": {"reflection_id": {"type": "integer", "description": "to identify the reflection from others", "example": 1}, "verse_id": {"type": "integer", "description": "to identify the verse that the reflection is refering to", "example": 23}, "title": {"type": "string", "description": "a title to the refelction", "example": "My Reflection"}, "reflection": {"type": "string", "description": "refelction on verse", "example": "I have..."}}}, "RootMeaning": {"type": "object", "required": ["meaning_id", "root_id", "meaning"], "properties": {"meaning_id": {"type": "integer", "description": "the id of the meaning", "example": 1}, "root_id": {"type": "integer", "description": "the id of the root word", "example": 936}, "meaning": {"type": "string", "description": "The meaning.", "example": "A name"}}}, "RootWord": {"type": "object", "required": ["root_id", "rootword", "meanings"], "properties": {"root_id": {"type": "integer", "description": "the id of the root word", "example": 936}, "rootword": {"type": "string", "description": "string representaiton of the root word with spaces in between each letter.", "example": "\u0633 \u0645 \u0648"}}}, "SurahInfo": {"type": "object", "required": ["surah_info_id", "surah", "title", "info"], "properties": {"surah_info_id": {"type": "integer", "description": "to uniquely identify the surah info from others", "example": 1}, "surah": {"type": "integer", "description": "to identify the surah that the surah info is refering to", "example": 23}, "title": {"type": "string", "description": "a title to the surah info section", "example": "Opening of The Quran"}, "info": {"type": "string", "description": "information regarding the surah", "example": "This surah was..."}}}, "Verse": {"type": "object", "required": ["index", "sura", "aya", "text"], "properties": {"index": {"type": "integer", "description": "the index of the verse in the quran", "example": 1}, "sura": {"type": "integer", "description": "the sura id/number that the verse belongs to", "example": 1}, "aya": {"type": "integer", "description": "the aya number within the surah", "example": 1}, "text": {"type": "string", "description": "the text representation of the verse", "example": "\u0628\u0650\u0633\u0652\u0645\u0650 \u0627\u0644\u0644\u0651\u064e\u0647\u0650 \u0627\u0644\u0631\u0651\u064e\u062d\u0652\u0645\u064e\u0640\u0670\u0646\u0650 \u0627\u0644\u0631\u0651\u064e\u062d\u0650\u064a\u0645\u0650"}}}, "VerseWordMeaning": {"type": "object", "required": ["index_id", "word_id", "word", "root_id", "rootword", "meanings"], "properties": {"index_id": {"type": "Integer", "description": "the index of the verse in the quran", "example": 1}, "word_id": {"type": "integer", "description": "the id pertaining to a specific word in the verse", "example": 2000}, "word": {"type": "string", "description": "a specific word in the verse", "example": "\u0628\u0650\u0633\u0652\u0645\u0650"}, "root_id": {"type": "integer", "description": "the id of the root word associated with the specific word in the verse", "example": 936}, "rootword": {"type": "integer", "description": "string representaiton of the root word with spaces in between each letter.", "example": "\u0633 \u0645 \u0648"}, "meanings": {"type": "array", "items": {"$ref": "#/definitions/RootMeaning"}, "description": "the meanings associated with the word in the verse"}}}}, "tags": [{"name": "ArabicWord", "x-display": "ArabicWord", "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ArabicWord\" />"}, {"name": "Chapter", "x-display": "Chapter", "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Chapter\" />"}, {"name": "Lesson", "x-display": "Lesson", "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Lesson\" />"}, {"name": "Mufasir", "x-display": "Mufasir", "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Mufasir\" />"}, {"name": "Reflection", "x-display": "Reflection", "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Reflection\" />"}, {"name": "RootMeaning", "x-display": "RootMeaning", "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RootMeaning\" />"}, {"name": "RootWord", "x-display": "RootWord", "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RootWord\" />"}, {"name": "SurahInfo", "x-display": "SurahInfo", "description": "<SchemaDefinition schemaRef=\"#/components/schemas/SurahInfo\" />"}, {"name": "Verse", "x-display": "Verse", "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Verse\" />"}, {"name": "VerseWordMeaning", "x-display": "VerseWordMeaning", "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VerseWordMeaning\" />"}], "x-tagGroups": [{"name": "API Endpoints", "tags": [["Quran Endpoints"], ["Lesson Endpoints"], ["Linguistic Endpoints"], ["Tafsir Endpoints"], ["Reflection Endpoints"], ["SurahInfo Endpoints"]]}, {"name": "Models", "tags": ["ArabicWord", "Chapter", "Lesson", "Mufasir", "Reflection", "RootMeaning", "RootWord", "SurahInfo", "Verse", "VerseWordMeaning"]}]}