{"swagger": "2.0", "info": {"x-logo": {"altText": "Quran Journey", "url": "./assets/img/qjLogo.png"}, "title": "Quran Journey API"}, "host": "localhost", "basePath": "/api", "schemes": ["http"], "paths": {"/chapter/{sura_number}": {"get": {"summary": "Get Chapter Verses", "description": "Fetches the verses of a chapter", "tags": ["Root Endpoints"], "produces": ["application/json"], "parameters": [{"in": "query", "name": "sura_number", "type": "integer", "required": true, "example": 1}], "responses": {"200": {"description": "A list of the verses in a chapter.", "schema": {"type": "array", "items": {"$ref": "#/definitions/Verse"}}}, "404": {"description": "No chapter with that ID found."}}}}, "/chapters": {"get": {"summary": "Get Chapters", "description": "Fetch an ordered list of all of the english names of the chapters in the Quran.", "tags": ["Root Endpoints"], "produces": ["application/json"], "responses": {"200": {"description": "An ordered list of chapters with their names and sura_numbers.", "schema": {"type": "array", "items": {"$ref": "#/definitions/Chapter"}}}}}}, "/lesson": {"post": {"summary": "Create a lesson", "tags": ["Lesson Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "name": "id", "description": "the lesson to update and it's new attributes", "schema": {"$ref": "#/definitions/Lesson"}}], "responses": {"200": {"description": "Lesson has been created."}}}, "patch": {"summary": "Update a lesson", "tags": ["Lesson Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "name": "id", "description": "the lesson to update and it's new attributes", "schema": {"$ref": "#/definitions/Lesson"}}], "responses": {"200": {"description": "Lesson has been updated."}, "404": {"description": "Could not find a lesson with that id."}}}, "delete": {"summary": "Delete a lesson", "tags": ["Lesson Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "name": "id", "description": "the lesson to be deleted", "schema": {"$ref": "#/definitions/Lesson"}}], "responses": {"200": {"description": "The Lesson has been deleted.", "schema": {"$ref": "#/definitions/Lesson"}}, "404": {"description": "Could not find a lesson with that id."}}}}, "/lesson/{lesson_id}": {"get": {"summary": "Fetch a lesson by ID", "description": "This is a general fetch and has no parameters. It will fetch all of the lessons in the database.", "tags": ["Lesson Endpoints"], "produces": ["application/json"], "parameters": [{"in": "path", "name": "lesson_id", "type": "integer", "required": true, "example": 1}], "responses": {"200": {"description": "The corresponding lesson.", "schema": {"$ref": "#/definitions/Lesson"}}, "404": {"description": "No lessons found with that ID."}}}}, "/lessons": {"get": {"summary": "Filter lessons", "description": "This fetch acts as a filter based on the given query params. If none are given, then all params are fetched. Operator must be one of: eq, gt, lt, gte, or lte.", "tags": ["Lesson Endpoints"], "produces": ["application/json"], "parameters": [{"in": "query", "name": "property", "type": "string", "required": false, "example": "lesson_date"}, {"in": "query", "name": "operator", "type": "string", "required": false, "example": "eq"}, {"in": "query", "name": "value", "type": "string", "required": false, "example": "2021-5-28"}], "responses": {"200": {"description": "A list of lessons.", "schema": {"type": "array", "items": {"$ref": "#/definitions/Lesson"}}}, "404": {"description": "No lessons found."}}}}, "/mufasir": {"get": {"summary": "Get Mufasireen", "description": "Fetch an ordered list of all of the names of mufasireen.", "tags": ["Tafsir Endpoints"], "produces": ["application/json"], "responses": {"200": {"description": "An ordered list of mufasireen with their information.", "schema": {"type": "array", "items": {"$ref": "#/definitions/Mufasir"}}}}}, "post": {"summary": "Add Mufasir", "description": "Add a mufasir.", "tags": ["Tafsir Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "name": "mufasir_name", "type": "string", "required": true, "example": "Ibn Kathir"}, {"in": "body", "name": "death", "type": "string", "required": true, "example": "774"}], "responses": {"200": {"description": "Successfully added mufasir."}}}, "put": {"summary": "Update Mufasir", "description": "Update a mufasir.", "tags": ["Tafsir Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "name": "mufasir_id", "type": "integer", "required": true, "example": 1}, {"in": "body", "name": "mufasir_name", "type": "string", "required": true, "example": "Ibn Kathir"}, {"in": "body", "name": "death", "type": "string", "required": true, "example": "774"}], "responses": {"200": {"description": "Successfully updated mufasir."}, "404": {"description": "A mufasir with that ID does not exist."}}}, "delete": {"summary": "Remove Mufasir", "description": "Remove a mufasir.", "tags": ["Tafsir Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "name": "mufasir_id", "type": "integer", "required": true, "example": 1}], "responses": {"200": {"description": "Successfully deleted mufasir."}, "404": {"description": "A mufasir with that ID does not exist."}}}}, "/reflection": {"get": {"summary": "Get all reflections", "description": "This is used to request all reflections stored in the Reflection Table", "tags": ["Reflection Endpoints"], "produces": ["application/json"], "responses": {"200": {"description": "All reflections have been fetched.", "schema": {"$ref": "#/definitions/Reflection"}}, "404": {"description": "Could not find any reflections."}}}, "post": {"summary": "Create a reflection", "description": "This creates a reflection from the data attribute in the request body", "tags": ["Reflection Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "name": "id", "description": "the reflection to update and it's new attributes", "schema": {"$ref": "#/definitions/Reflection"}}], "responses": {"200": {"description": "Reflection has been created."}}}, "patch": {"summary": "Update a reflection", "tags": ["Reflection Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "name": "id", "description": "the reflection to update and it's new attributes", "schema": {"$ref": "#/definitions/Reflection"}}], "responses": {"200": {"description": "Reflection has been updated."}, "404": {"description": "Could not find a reflection with that id."}}}, "delete": {"summary": "Delete a reflection", "tags": ["Reflection Endpoints"], "produces": ["application/json"], "parameters": [{"in": "params", "name": "id", "description": "the reflection to be deleted", "schema": {"$ref": "#/definitions/Reflection"}}], "responses": {"200": {"description": "The reflection has been deleted.", "schema": {"$ref": "#/definitions/Reflection"}}, "404": {"description": "Could not find a reflection with that id."}}}}, "/reflection/{reflection_id}": {"get": {"summary": "Fetch a Reflection by ID", "description": "This is a general fetch and has no parameters. It will fetch all of the reflections in the database.", "tags": ["Reflection Endpoints"], "produces": ["application/json"], "parameters": [{"in": "path", "name": "reflection_id", "type": "integer", "required": true, "example": 1}], "responses": {"200": {"description": "The corresponding reflection.", "schema": {"$ref": "#/definitions/Reflection"}}, "404": {"description": "No reflections found with that ID."}}}}, "/verse/{verse_id}": {"get": {"summary": "Get a Verse's root words", "description": "Fetches the root words and their meanings for each of the words in a verse.", "tags": ["Root Endpoints"], "produces": ["application/json"], "parameters": [{"in": "query", "name": "verse_id", "type": "integer", "required": true, "example": 1}], "responses": {"200": {"description": "A list of the root words and their meanings pertaining to each word in a verse.", "schema": {"type": "array", "items": {"$ref": "#/definitions/RootWord"}}}, "404": {"description": "No verse with that ID found."}}}}}, "definitions": {"Chapter": {"type": "object", "required": ["sura_number", "sura_name"], "properties": {"sura_number": {"type": "integer", "description": "the number of the surah (acting as the surah id)", "example": 1}, "sura_name": {"type": "string", "description": "the name of the surah", "example": "al-F\u0101tihah"}}}, "Lesson": {"type": "object", "required": ["lesson_id", "lesson_date", "source"], "properties": {"lesson_id": {"type": "integer", "description": "to identify the lesson from others", "example": 1}, "lesson_date": {"type": "date", "description": "to identify the day that the lesson was taught", "example": "2021-10-30T00:00:00.000Z"}, "source": {"type": "string", "description": "a URL to the lesson recording", "example": "https://www.facebook.com/watch/live/?ref=watch_permalink&v=244235014324418"}}}, "Mufasir": {"type": "object", "required": ["mufasir_id", "mufasir_name", "death"], "properties": {"mufasir_id": {"type": "Integer", "description": "the id of the mufasir", "example": 1}, "mufasir_name": {"type": "string", "description": "The name of the mufasir", "example": "Ibn Kathir"}, "death": {"type": "string", "description": "The date that the mufasir passed away", "example": "1203 H"}}}, "Reflection": {"type": "object", "required": ["reflection_id", "verse_explanation_id", "title", "reflection"], "properties": {"reflection_id": {"type": "integer", "description": "to identify the reflection from others", "example": 1}, "verse_explanation_id": {"type": "integer", "description": "to identify the verse that the reflection is refering to", "example": 23}, "title": {"type": "string", "description": "a title to the refelction", "example": "My Reflection"}, "reflection": {"type": "string", "description": "refelction on verse", "example": "I have..."}}}, "RootWord": {"type": "object", "required": ["indexid", "wordid", "word", "rootid", "rootword", "meanings"], "properties": {"indexid": {"type": "Integer", "description": "the index of the verse in the quran", "example": 1}, "wordid": {"type": "integer", "description": "the id pertaining to a specific word in the verse", "example": 2000}, "word": {"type": "string", "description": "a specific word in the verse", "example": "\u0628\u0650\u0633\u0652\u0645\u0650"}, "rootid": {"type": "integer", "description": "the id of the root word associated with the specific word in the verse", "example": 936}, "rootword": {"type": "integer", "description": "string representaiton of the root word with spaces in between each letter.", "example": "\u0633 \u0645 \u0648"}, "meanings": {"type": "string", "description": "the meanings associated with the root word", "example": "to be high/lofty, raised, name, attribute. samawat - heights/heavens/rain, raining clouds. ismun - mark of identification by which one is recognised. It is a derivation of wsm (pl. asma). ism - stands for a distinguishing mark of a thing, sometimes said to signify its reality."}}}, "Verse": {"type": "object", "required": ["index", "sura", "aya", "text"], "properties": {"index": {"type": "integer", "description": "the index of the verse in the quran", "example": 1}, "sura": {"type": "integer", "description": "the sura id/number that the verse belongs to", "example": 1}, "aya": {"type": "integer", "description": "the aya number within the surah", "example": 1}, "text": {"type": "string", "description": "the text representation of the verse", "example": "\u0628\u0650\u0633\u0652\u0645\u0650 \u0627\u0644\u0644\u0651\u064e\u0647\u0650 \u0627\u0644\u0631\u0651\u064e\u062d\u0652\u0645\u064e\u0640\u0670\u0646\u0650 \u0627\u0644\u0631\u0651\u064e\u062d\u0650\u064a\u0645\u0650"}}}}, "tags": [{"name": "Chapter", "x-display": "Chapter", "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Chapter\" />"}, {"name": "Lesson", "x-display": "Lesson", "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Lesson\" />"}, {"name": "Mufasir", "x-display": "Mufasir", "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Mufasir\" />"}, {"name": "Reflection", "x-display": "Reflection", "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Reflection\" />"}, {"name": "RootWord", "x-display": "RootWord", "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RootWord\" />"}, {"name": "Verse", "x-display": "Verse", "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Verse\" />"}], "x-tagGroups": [{"name": "API Endpoints", "tags": [["Root Endpoints"], ["Lesson Endpoints"], ["Tafsir Endpoints"], ["Reflection Endpoints"]]}, {"name": "Models", "tags": ["Chapter", "Lesson", "Mufasir", "Reflection", "RootWord", "Verse"]}]}